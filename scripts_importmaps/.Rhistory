voi_layer
paste0(dest.dir.sg, "/SG_",
voi_layer, ".tiff")
f <- terra::writeRaster(r.sg, file=paste0(dest.dir.sg, "/SG_",
voi_layer, ".tiff"),
overwrite=TRUE, wopt=list(datatype="INT2U"),
filetype="GTiff")
dest.dir.sg <-  paste0(base.dir.sg,
AOI.dir.prefix, "/",
voi, "/",
quantile.sg, "/",
depth)
if (!dir.exists(dest.dir.sg)) {
dir.create(dest.dir.sg, recursive = TRUE)
}
f <- terra::writeRaster(r.sg, file=paste0(dest.dir.sg, "/SG_",
voi_layer, ".tiff"),
overwrite=TRUE, wopt=list(datatype="INT2U"),
filetype="GTiff")
r.sg
?save
save(r.sg, file=paste0(dest.dir.sg, "/SG_", voi_layer))
save(r.sg, file=paste0(dest.dir.sg, "/SG_", voi_layer, ".rds"))
save(r.sg, file=paste0(dest.dir.sg, "/SG_", voi_layer, ".rds"), compress=TRUE)
?writeRaster
f <- terra::writeRaster(r.sg, file=paste0(dest.dir.sg, "/SG_",
voi_layer, ".tiff"),
overwrite=TRUE,
wopt=list(datatype="INT2U", compress="LZW", TFW="YES"),
filetype="GTiff")
f <- terra::writeRaster(r.sg, file=paste0(dest.dir.sg, "/SG_",
voi_layer, ".tiff"),
overwrite=TRUE,
wopt=list(datatype="INT2U"),
gdal=c("compress=LZW", "TFW=YES"),
filetype="GTiff")
f <- terra::writeRaster(r.sg, file=paste0(dest.dir.sg, "/SG_",
voi_layer, ".tiff"),
overwrite=TRUE,
wopt=list(datatype="INT2U", filetype="GTiff",
gdal=c("compress=LZW", "TFW=YES"))
)
# GDAL options at https://gdal.org/drivers/raster/gtiff.html
out.file <- paste0(dest.dir.sg, "/SG_", voi_layer, ".tiff")
f <- terra::writeRaster(r.sg, file=outfile, overwrite=TRUE,
wopt=list(datatype="INT2U", filetype="GTiff",
gdal=c("compress=LZW", "TFW=YES"))
)
# GDAL options at https://gdal.org/drivers/raster/gtiff.html
out.file <- paste0(dest.dir.sg, "/SG_", voi_layer, ".tiff")
f <- terra::writeRaster(r.sg, file=out.file, overwrite=TRUE,
wopt=list(datatype="INT2U", filetype="GTiff",
gdal=c("compress=LZW", "TFW=YES"))
)
r <- rast(out.file)
r
plot(r)
terra::plot(r.sg)
terra::plot(r)
summary(r - r.sg)
r.sg
file.out <- paste0(dest.dir.sg.import, "/", voi_layer, '.tif')
gdal_translate(src_dataset=xml.download,
dst_dataset=file.out,
tr=c(250,250),
projwin_srs=crs.igh,
projwin=bb.sg,
co=c("TILED=YES","COMPRESS=DEFLATE",
"PREDICTOR=2","BIGTIFF=YES"),
verbose=TRUE
)
r.sg <- terra::rast(file.out)
r.sg
sg_url <- "/vsicurl?max_retry=3&retry_delay=1&list_dir=no&url=https://files.isric.org/soilgrids/latest/data/"
gdal_translate(paste0(sg_url,'ocs/ocs_0-30cm_mean.vrt'),
"./crop_roi_igh_r.tif",
tr=c(250,250),
projwin=bb.sg,
projwin_srs = crs.igh,
verbose=TRUE)
getwd()
sg_url <- "/vsicurl?max_retry=3&retry_delay=1&list_dir=no&url=https://files.isric.org/soilgrids/latest/data/"
gdal_translate(src_dataset=paste0(sg_url,'ocs/ocs_0-30cm_mean.vrt'),
dst_dataset="./crop_roi_igh_r.tif",
tr=c(250,250),
projwin=bb.sg,
projwin_srs = crs.igh,
verbose=TRUE)
file.out.vrt <- paste0(dest.dir.sg.import, "/", voi_layer, '.vrt')
sg_url <- "/vsicurl?max_retry=3&retry_delay=1&list_dir=no&url=https://files.isric.org/soilgrids/latest/data/"
file.out.vrt <- paste0(dest.dir.sg.import, "/", voi_layer, '.vrt')
gdal_translate(src_dataset=paste0(sg_url,'ocs/ocs_0-30cm_mean.vrt'),
dst_dataset=file.out.vrt,
tr=c(250,250),
projwin=bb.sg,
projwin_srs = crs.igh,
verbose=TRUE)
voi_layer
gdalwarp(file.out.vrt,
paste0("ll_", file.out.vrt),
s_src=igh,
t_srs="EPSG:4326",
of="VRT")
file.out.vrt.4326 <- paste0(dest.dir.sg.import, "/", voi_layer, '.vrt')
gdalwarp(file.out.vrt,
file.out.vrt.4326),
s_src=igh,
t_srs="EPSG:4326",
of="VRT")
voi_layer
file.out.vrt.4326 <- paste0(dest.dir.sg.import, "/", voi_layer, '_4326.vrt')
file.out.vrt.4326
file.out.vrt.4326 <- paste0(dest.dir.sg.import, "/", voi_layer, '_4326.vrt')
gdalwarp(src=file.out.vrt,
dest=file.out.vrt.4326,
s_src=igh,
t_srs="EPSG:4326",
of="VRT")
file.out.vrt.4326 <- paste0(dest.dir.sg.import, "/", voi_layer, '_4326.vrt')
gdalwarp(src_dataset=file.out.vrt,
dst_dataset=file.out.vrt.4326,
s_src=igh,
t_srs="EPSG:4326",
of="VRT")
?gdalwarp
file.out.vrt.4326 <- paste0(dest.dir.sg.import, "/", voi_layer, '_4326.vrt')
gdalwarp(srcfile=file.out.vrt,
dstfile=file.out.vrt.4326,
s_src=igh,
t_srs="EPSG:4326",
of="VRT")
file.out.4326 <- paste0(dest.dir.sg.import, "/", voi_layer, '_4326.tif')
gdal_translate(src_dataset = file.out.vrt.4326,
dst_dataset = file.out.4326,
co=c("TILED=YES","COMPRESS=DEFLATE","PREDICTOR=2","BIGTIFF=YES"))
file.out.4326
r <- readGDAL(file.out.vrt.4326)
terra::plot(r)
res(r)
r <- terra:rast(r)
r <- terra::rast(r)
summary(r)
voi_layer
paste0(sg_url, voi, '/', voi_layer, '.vrt')
# *** specify the correct property here -- example is SOC stock... not what we want
gdal_translate(src_dataset=paste0(sg_url, voi, '/', voi_layer, '.vrt'),
dst_dataset=file.out.vrt,
tr=c(250,250),
projwin=bb.sg,
projwin_srs = crs.igh,
verbose=TRUE)
file.out.vrt.4326 <- paste0(dest.dir.sg.import, "/", voi_layer, '_4326.vrt')
gdalwarp(srcfile=file.out.vrt,
dstfile=file.out.vrt.4326,
s_src=igh,
t_srs="EPSG:4326",
of="VRT")
file.out.4326 <- paste0(dest.dir.sg.import, "/", voi_layer, '_4326.tif')
gdal_translate(src_dataset = file.out.vrt.4326,
dst_dataset = file.out.4326,
co=c("TILED=YES","COMPRESS=DEFLATE","PREDICTOR=2","BIGTIFF=YES"))
sg_url <- "/vsicurl?max_retry=3&retry_delay=1&list_dir=no&url=https://files.isric.org/soilgrids/latest/data/"
file.out.vrt <- paste0(dest.dir.sg.import, "/", voi_layer, '.vrt')
# *** specify the correct property here -- example is SOC stock... not what we want
gdal_translate(src_dataset=paste0(sg_url, voi, '/', voi_layer, '.vrt'),
dst_dataset=file.out.vrt,
tr=c(250,250),
projwin=bb.sg,
projwin_srs = crs.igh,
verbose=TRUE)
file.out.vrt.4326 <- paste0(dest.dir.sg.import, "/", voi_layer, '_4326.vrt')
gdalwarp(srcfile=file.out.vrt,
dstfile=file.out.vrt.4326,
s_src=igh,
t_srs="EPSG:4326",
of="VRT")
?gdalwarp
file.out.vrt.4326 <- paste0(dest.dir.sg.import, "/", voi_layer, '_4326.vrt')
gdalwarp(srcfile=file.out.vrt,
dstfile=file.out.vrt.4326,
s_src=igh,
t_srs="EPSG:4326",
of="VRT",
overwrite=TRUE)
file.out.4326 <- paste0(dest.dir.sg.import, "/", voi_layer, '_4326.tif')
gdal_translate(src_dataset = file.out.vrt.4326,
dst_dataset = file.out.4326,
co=c("TILED=YES","COMPRESS=DEFLATE","PREDICTOR=2","BIGTIFF=YES"),
overwrite=TRUE)
gdal_translate(src_dataset=paste0(sg_url, voi, '/', voi_layer, '.vrt'),
dst_dataset=file.out.vrt,
tr=c(250,250),
projwin=bb.sg,
projwin_srs = crs.igh,
overwrite=TRUE,
verbose=TRUE)
sg_url <- "/vsicurl?max_retry=3&retry_delay=1&list_dir=no&url=https://files.isric.org/soilgrids/latest/data/"
file.out.vrt <- paste0(dest.dir.sg.import, "/", voi_layer, '.vrt')
gdal_translate(src_dataset=paste0(sg_url, voi, '/', voi_layer, '.vrt'),
dst_dataset=file.out.vrt,
tr=c(250,250),
projwin=bb.sg,
projwin_srs = crs.igh,
overwrite=TRUE,
verbose=TRUE)
file.out.4326 <- paste0(dest.dir.sg.import, "/", voi_layer, '_4326.tif')
gdal_translate(src_dataset = file.out.vrt.4326,
dst_dataset = file.out.4326,
co=c("TILED=YES","COMPRESS=DEFLATE","PREDICTOR=2","BIGTIFF=YES"),
overwrite=TRUE)
sg_url <- "/vsicurl?max_retry=3&retry_delay=1&list_dir=no&url=https://files.isric.org/soilgrids/latest/data/"
file.out.vrt <- paste0(dest.dir.sg.import, "/", voi_layer, '.vrt')
file.out.vrt
(file.out.vrt <- paste0(dest.dir.sg.import, "/", voi_layer, '.vrt'))
gdal_translate(src_dataset=paste0(sg_url, voi, '/', voi_layer, '.vrt'),
dst_dataset=file.out.vrt,
tr=c(250,250),
projwin=bb.sg,
projwin_srs = crs.igh,
#    overwrite=TRUE,
verbose=TRUE)
crs.igh
gdal_translate(src_dataset=paste0(sg_url, voi, '/', voi_layer, '.vrt'),
dst_dataset=file.out.vrt,
tr=c(250,250),
projwin=bb.sg,
projwin_srs = crs.igh,
of="VRT",
overwrite=TRUE,
verbose=TRUE)
file.out.vrt.4326 <- paste0(dest.dir.sg.import, "/", voi_layer, '_4326.vrt')
gdalwarp(srcfile=file.out.vrt,
dstfile=file.out.vrt.4326,
s_src=igh,
t_srs="EPSG:4326",
of="VRT",
overwrite=TRUE)
(file.out.4326 <- paste0(dest.dir.sg.import, "/", voi_layer, '_4326.tif'))
gdal_translate(src_dataset = file.out.vrt.4326,
dst_dataset = file.out.4326,
co=c("TILED=YES","COMPRESS=DEFLATE","PREDICTOR=2","BIGTIFF=YES"),
overwrite=TRUE,
of="GTiff")
r <- rast(file.out.4326)
terra::plot(r)
summary(r)
res(r)
dim(r)
bbox(r)
terra::plot(r)
dev.off()
terra::plot(r)
r
summary(r.sg)
terra::plot(r)
summary(r)
summary(r.sg)
print(r.sg)
r.sg <- terra::rast(file.out.4326)
print(r.sg)
summary(r.sg)
(out.file <- paste0(dest.dir.sg, "/SG_", voi_layer, ".tiff"))
f <- terra::writeRaster(r.sg, file=out.file, overwrite=TRUE,
wopt=list(datatype="INT2U", filetype="GTiff",
gdal=c("compress=LZW", "TFW=YES"))
)
r <- rast(out.file)
r
terra::plot(r)
terra::plot(r.sg)
terra::plot(r)
summary(r)
# GDAL options at https://gdal.org/drivers/raster/gtiff.html
(out.file <- paste0(dest.dir.sg, "/SG_", voi_layer, ".tiff"))
f <- terra::writeRaster(r.sg, file=out.file, overwrite=TRUE,
wopt=list(datatype="INT2U", filetype="GTiff",
gdal=c("compress=LZW", "TFW=YES",
"gdall_tiff_internal_mask=TRUE"))
)
# GDAL options at https://gdal.org/drivers/raster/gtiff.html
(out.file <- paste0(dest.dir.sg, "/SG_", voi_layer, ".tiff"))
f <- terra::writeRaster(r.sg, file=out.file, overwrite=TRUE,
wopt=list(datatype="INT2U", filetype="GTiff",
gdal=c("compress=LZW", "TFW=YES",
"internal_mask=TRUE"))
)
NAvalue(r.sg)
NAvalue(r.sg) <- NaN
?SpatRaster
?writeRaster
# GDAL options at https://gdal.org/drivers/raster/gtiff.html
(out.file <- paste0(dest.dir.sg, "/SG_", voi_layer, ".tiff"))
NAvalue(r.sg) <- NaN
f <- terra::writeRaster(r.sg, file=out.file, overwrite=TRUE,
wopt=list(datatype="INT2U", filetype="GTiff",
gdal=c("compress=LZW", "TFW=YES")),
NAflag=NA
)
# GDAL options at https://gdal.org/drivers/raster/gtiff.html
(out.file <- paste0(dest.dir.sg, "/SG_", voi_layer, ".tiff"))
NAvalue(r.sg) <- NaN
f <- terra::writeRaster(r.sg, file=out.file, overwrite=TRUE,
wopt=list(datatype="INT2U", filetype="GTiff",
gdal=c("compress=LZW", "TFW=YES"),
NAflag=NA)
)
r <- rast(out.file)
summary(r)
terra::plot(r)
r.sg <- terra::rast(file.out.4326)
print(r.sg)
summary(r.sg)
terra::plot(r.sg)
dest.dir.sg
(file.out.4326 <- paste0(dest.dir.sg, "/", voi_layer, '_4326.tif'))
gdal_translate(src_dataset = file.out.vrt.4326,
dst_dataset = file.out.4326,
co=c("TILED=YES","COMPRESS=DEFLATE","PREDICTOR=2","BIGTIFF=YES"),
overwrite=TRUE,
of="GTiff")
r.sg <- terra::rast(file.out.4326)
print(r.sg)
summary(r.sg)
terra::plot(r.sg)
dest.dir.sg <-  paste0(base.dir.sg,
AOI.dir.prefix, "/",
voi, "/",
quantile.sg, "/",
depth)
dest.dir.sg
(file.out <- paste0(dest.dir.sg, "/", voi_layer, '.tif'))
gdal_translate(src_dataset = file.out.vrt,
dst_dataset = file.out,
co=c("TILED=YES","COMPRESS=DEFLATE","PREDICTOR=2","BIGTIFF=YES"),
overwrite=TRUE,
of="GTiff")
print(bb.ll)
bb.igh <- st_transform(bb.ll, crs.igh)
bb.igh <-  st_coordinates(bb.igh)
bb.igh
st_boundary(bb.ll)
print(bb.ll)
plot(st_boundary(bb.ll))
print(bb.ll)
?st_sfc
size <- 1
tile.ulc <- c(tile.lrc[1]-1, tile.lrc[2]+1) # upper-left corner
tile.lrc <- c(-77, 35)   # lower-right corner: coastal plain NC
tile.ulc <- c(tile.lrc[1]-1, tile.lrc[2]+1) # upper-left corner
m <- matrix(c(tile.lrc[1]-size,tile.lrc[1],  #ulc
tile.lrc[2]+1, tile.lrc[2]  #lrc
),
nrow=2)
bb.ll <- st_sfc(st_multipoint(m))
st_crs(bb.ll) <- 4326
print(bb.ll)
# tile.lrc <- c(-76, 42) # lower-right corner: central NY
tile.lrc <- c(-77, 35)   # lower-right corner: coastal plain NC
size <- 1                # tile dimensions
m <- matrix(c(tile.lrc[1]-size, tile.lrc[2],  #ulc
tile.lrc[1], tile.lrc[2]+size,  #urc
tile.lrc[1], tile.lrc[2],       #lrc
tile.lrc[1]-size, tile.lrc[2],  #lcc
),
nrow=2)
bb.ll <- st_sfc(st_multipoint(m))
st_crs(bb.ll) <- 4326
print(bb.ll)
m
c(tile.lrc[1]-size, tile.lrc[2],  #ulc
tile.lrc[1], tile.lrc[2]+size,  #urc
tile.lrc[1], tile.lrc[2],       #lrc
tile.lrc[1]-size, tile.lrc[2],  #lcc
)
# tile.lrc <- c(-76, 42) # lower-right corner: central NY
tile.lrc <- c(-77, 35)   # lower-right corner: coastal plain NC
size <- 1                # tile dimensions
m <- matrix(c(tile.lrc[1]-size, tile.lrc[2],  #ulc
tile.lrc[1], tile.lrc[2]+size,  #urc
tile.lrc[1], tile.lrc[2],       #lrc
tile.lrc[1]-size, tile.lrc[2]  #lcc
),
nrow=2)
m
bb.ll <- st_sfc(st_multipoint(m))
st_crs(bb.ll) <- 4326
print(bb.ll)
# tile.lrc <- c(-76, 42) # lower-right corner: central NY
tile.lrc <- c(-77, 35)   # lower-right corner: coastal plain NC
size <- 1                # tile dimensions
m <- matrix(c(tile.lrc[1]-size, tile.lrc[2],  #ulc
tile.lrc[1], tile.lrc[2]+size,  #urc
tile.lrc[1], tile.lrc[2],       #lrc
tile.lrc[1]-size, tile.lrc[2]  #lcc
),
nrow=4)
m
bb.ll <- st_sfc(st_multipoint(m))
st_crs(bb.ll) <- 4326
print(bb.ll)
m
# tile.lrc <- c(-76, 42) # lower-right corner: central NY
tile.lrc <- c(-77, 35)   # lower-right corner: coastal plain NC
size <- 1                # tile dimensions
m <- matrix(c(tile.lrc[1]-size, tile.lrc[2],  #ulc
tile.lrc[1], tile.lrc[2]+size,  #urc
tile.lrc[1], tile.lrc[2],       #lrc
tile.lrc[1]-size, tile.lrc[2]  #lcc
),
nrow=4, byrow = TRUE)
m
bb.ll <- st_sfc(st_multipoint(m))
st_crs(bb.ll) <- 4326
print(bb.ll)
)
m
# tile.lrc <- c(-76, 42) # lower-right corner: central NY
tile.lrc <- c(-77, 35)   # lower-right corner: coastal plain NC
size <- 1                # tile dimensions
m <- matrix(c(tile.lrc[1]-size, tile.lrc[2],  #ulc
tile.lrc[1], tile.lrc[2],  #urc
tile.lrc[1], tile.lrc[2],       #lrc
tile.lrc[1]-size, tile.lrc[2]  #lcc
),
nrow=4, byrow = TRUE)
m
bb.ll <- st_sfc(st_multipoint(m))
st_crs(bb.ll) <- 4326
print(bb.ll)
m
# tile.lrc <- c(-76, 42) # lower-right corner: central NY
tile.lrc <- c(-77, 35)   # lower-right corner: coastal plain NC
size <- 1                # tile dimensions
m <- matrix(c(tile.lrc[1]-size, tile.lrc[2]+size,  #ulc
tile.lrc[1], tile.lrc[2]+size,  #urc
tile.lrc[1], tile.lrc[2],       #lrc
tile.lrc[1]-size, tile.lrc[2]  #lcc
),
nrow=4, byrow = TRUE)
m
bb.ll <- st_sfc(st_multipoint(m))
st_crs(bb.ll) <- 4326
print(bb.ll)
m
bb.ll <- st_sfc(st_multipoint(m))
st_boundary(bb.ll)
st_crs(bb.ll) <- 4326
print(bb.ll)
m <- rbind(m, m[1,]) # close the polygon
m
bb.ll <- st_sfc(st_polygon(m))
bb.ll <- st_polygon(m)
bb.ll <- st_polygon(list(m))
st_crs(bb.ll) <- 4326
print(bb.ll)
bb.ll <- st_sfc(t_polygon(list(m)))
bb.ll <- st_sfc(st_polygon(list(m)))
st_crs(bb.ll) <- 4326
print(bb.ll)
plot(bb.ll)
bbox(bb.ll)
st_boundary(bb.ll)
bb.igh <- st_transform(bb.ll, crs.igh)
bb.igh
plot(bb.igh)
bb.igh.coords <-  st_coordinates(bb.igh)
(bb.igh.coords <-  st_coordinates(bb.igh))
ext(bb.igh)
(bb.igh.coords <-  st_coordinates(bb.igh))
(bb.igh <- st_transform(bb.ll, crs.igh))
(bb.igh.coords <-  st_coordinates(bb.igh))
bb.sg <- as.vector(c(min(bb.igh[,"X"]), max(bb.igh[,"Y"]), max(bb.igh[,"X"]), min(bb.igh[,"Y"])))
(bb.igh.coords <-  st_coordinates(bb.igh)[,1:2])
bb.sg <- as.vector(c(min(bb.igh[,"X"]), max(bb.igh[,"Y"]), max(bb.igh[,"X"]), min(bb.igh[,"Y"])))
min(bb.igh[,"X"])
min(bb.igh$X)
min(bb.igh[[,"X"]])
class(bb.igh)
(bb.igh <- st_transform(bb.ll, crs.igh))
(bb.igh.coords <-  st_coordinates(bb.igh)[,1:2])
# must order these as c(ulx, uly, lrx, lry)
bb.sg <- as.vector(c(min(bb.igh.coords[,"X"]),
max(bb.igh.coords[,"Y"]),
max(bb.igh.coords[,"X"]),
min(bb.igh.coords[,"Y"])))
bb.sg
(bb.igh <- st_transform(bb.ll, crs.igh))
(bb.igh.coords <-  st_coordinates(bb.igh)[,1:2])
# must order these as c(ulx, uly, lrx, lry)
(bb.sg <- as.vector(c(min(bb.igh.coords[,"X"]),
max(bb.igh.coords[,"Y"]),
max(bb.igh.coords[,"X"]),
min(bb.igh.coords[,"Y"]))))
tile.ulc <- c(tile.lrc[1]-size, tile.lrc[2]+size)   # lower-right corner: coastal plain NC
tile.ulc
tile.lrc
gdal_setInstallation()
valid_install <- !is.null(getOption("gdalUtils_gdalPath"))
if (valid_install)
print("Valid GDAL found") else
{print("No valid GDAL"); quit()}
?gdal_translate
r.sg <- terra::rast(file.out)
print(r.sg)
summary(r.sg)
terra::plot(r.sg)
summary(r.sg.4326)
r.sg.4326 <- terra::rast(file.out.4326)
print(r.sg.4326)
summary(r.sg.4326)
terra::plot(r.sg.4326)
setwd("~/GitHub/ncss-tech/compare-psm/scripts_importmaps")
